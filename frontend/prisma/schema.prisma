generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CategoriesOnPosts {
  postId     String
  categoryId String
  assignedAt DateTime @default(now())
  assignedBy String
  Category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
}

model Category {
  id                String              @id
  name              String
  userId            String
  CategoriesOnPosts CategoriesOnPosts[]
  User              User                @relation(fields: [userId], references: [id])
}

model Comment {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime
  username  String
  desc      String
  postId    String
  userId    String
  Post      Post     @relation(fields: [postId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model OgpMetaData {
  id          String  @id
  encodedUrl  String
  title       String?
  image       String?
  favicon     String?
  description String?
  postId      String
  Post        Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Post {
  id                String              @id
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  title             String
  desc              String
  image             String?
  likes             Int                 @default(0)
  status            String
  userId            String
  CategoriesOnPosts CategoriesOnPosts[]
  Comment           Comment[]
  OgpMetaData       OgpMetaData[]
  User              User                @relation(fields: [userId], references: [id])
}

model User {
  id             String     @id
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
  username       String     @unique
  email          String     @unique
  hashedPassword String
  Category       Category[]
  Comment        Comment[]
  Post           Post[]
}
